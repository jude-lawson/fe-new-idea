// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CommentForm should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CommentForm
    postContribution={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="comment-form"
        onSubmit={[Function]}
>
        <h1
                className="comment--form-header"
        >
                Contribute to the Idea
        </h1>
        <textarea
                className="comment--body-input"
                name="body"
                onChange={[Function]}
                placeholder="Description"
                required={true}
        />
        <button
                className="comment--form-btn btn-grad"
                id="blue-btn"
        >
                SUBMIT
        </button>
</form>,
      "className": "comment--form-container not-hidden",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="comment--form-header"
>
            Contribute to the Idea
</h1>,
          <textarea
            className="comment--body-input"
            name="body"
            onChange={[Function]}
            placeholder="Description"
            required={true}
/>,
          <button
            className="comment--form-btn btn-grad"
            id="blue-btn"
>
            SUBMIT
</button>,
        ],
        "className": "comment-form",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Contribute to the Idea",
            "className": "comment--form-header",
          },
          "ref": null,
          "rendered": "Contribute to the Idea",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "comment--body-input",
            "name": "body",
            "onChange": [Function],
            "placeholder": "Description",
            "required": true,
          },
          "ref": null,
          "rendered": null,
          "type": "textarea",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "SUBMIT",
            "className": "comment--form-btn btn-grad",
            "id": "blue-btn",
          },
          "ref": null,
          "rendered": "SUBMIT",
          "type": "button",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="comment-form"
          onSubmit={[Function]}
>
          <h1
                    className="comment--form-header"
          >
                    Contribute to the Idea
          </h1>
          <textarea
                    className="comment--body-input"
                    name="body"
                    onChange={[Function]}
                    placeholder="Description"
                    required={true}
          />
          <button
                    className="comment--form-btn btn-grad"
                    id="blue-btn"
          >
                    SUBMIT
          </button>
</form>,
        "className": "comment--form-container not-hidden",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="comment--form-header"
>
              Contribute to the Idea
</h1>,
            <textarea
              className="comment--body-input"
              name="body"
              onChange={[Function]}
              placeholder="Description"
              required={true}
/>,
            <button
              className="comment--form-btn btn-grad"
              id="blue-btn"
>
              SUBMIT
</button>,
          ],
          "className": "comment-form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Contribute to the Idea",
              "className": "comment--form-header",
            },
            "ref": null,
            "rendered": "Contribute to the Idea",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "comment--body-input",
              "name": "body",
              "onChange": [Function],
              "placeholder": "Description",
              "required": true,
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "SUBMIT",
              "className": "comment--form-btn btn-grad",
              "id": "blue-btn",
            },
            "ref": null,
            "rendered": "SUBMIT",
            "type": "button",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "disableLifecycleMethods": true,
    "hydrateIn": undefined,
  },
}
`;
