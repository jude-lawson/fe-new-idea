// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IdeaCard should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    ideas={
        Array [
            Object {
              "body": "world",
              "id": 1,
              "title": "hello",
            },
            Object {
              "body": "one",
              "id": 2,
              "title": "another",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/idea/1"
>
          <article
                    className="idea--card-container"
          >
                    <h1
                              className="idea--card-title"
                    >
                              hello
                    </h1>
                    <p
                              className="idea--card-body"
                    >
                              world
                    </p>
          </article>
</Link>,
        <Link
          replace={false}
          to="/idea/2"
>
          <article
                    className="idea--card-container"
          >
                    <h1
                              className="idea--card-title"
                    >
                              another
                    </h1>
                    <p
                              className="idea--card-body"
                    >
                              one
                    </p>
          </article>
</Link>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "children": <article
            className="idea--card-container"
>
            <h1
                        className="idea--card-title"
            >
                        hello
            </h1>
            <p
                        className="idea--card-body"
            >
                        world
            </p>
</article>,
          "replace": false,
          "to": "/idea/1",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="idea--card-title"
>
                hello
</h1>,
              <p
                className="idea--card-body"
>
                world
</p>,
            ],
            "className": "idea--card-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "hello",
                "className": "idea--card-title",
              },
              "ref": null,
              "rendered": "hello",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "world",
                "className": "idea--card-body",
              },
              "ref": null,
              "rendered": "world",
              "type": "p",
            },
          ],
          "type": "article",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "children": <article
            className="idea--card-container"
>
            <h1
                        className="idea--card-title"
            >
                        another
            </h1>
            <p
                        className="idea--card-body"
            >
                        one
            </p>
</article>,
          "replace": false,
          "to": "/idea/2",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="idea--card-title"
>
                another
</h1>,
              <p
                className="idea--card-body"
>
                one
</p>,
            ],
            "className": "idea--card-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "another",
                "className": "idea--card-title",
              },
              "ref": null,
              "rendered": "another",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "one",
                "className": "idea--card-body",
              },
              "ref": null,
              "rendered": "one",
              "type": "p",
            },
          ],
          "type": "article",
        },
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/idea/1"
>
            <article
                        className="idea--card-container"
            >
                        <h1
                                    className="idea--card-title"
                        >
                                    hello
                        </h1>
                        <p
                                    className="idea--card-body"
                        >
                                    world
                        </p>
            </article>
</Link>,
          <Link
            replace={false}
            to="/idea/2"
>
            <article
                        className="idea--card-container"
            >
                        <h1
                                    className="idea--card-title"
                        >
                                    another
                        </h1>
                        <p
                                    className="idea--card-body"
                        >
                                    one
                        </p>
            </article>
</Link>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "children": <article
              className="idea--card-container"
>
              <h1
                            className="idea--card-title"
              >
                            hello
              </h1>
              <p
                            className="idea--card-body"
              >
                            world
              </p>
</article>,
            "replace": false,
            "to": "/idea/1",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1
                  className="idea--card-title"
>
                  hello
</h1>,
                <p
                  className="idea--card-body"
>
                  world
</p>,
              ],
              "className": "idea--card-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "hello",
                  "className": "idea--card-title",
                },
                "ref": null,
                "rendered": "hello",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "world",
                  "className": "idea--card-body",
                },
                "ref": null,
                "rendered": "world",
                "type": "p",
              },
            ],
            "type": "article",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "children": <article
              className="idea--card-container"
>
              <h1
                            className="idea--card-title"
              >
                            another
              </h1>
              <p
                            className="idea--card-body"
              >
                            one
              </p>
</article>,
            "replace": false,
            "to": "/idea/2",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1
                  className="idea--card-title"
>
                  another
</h1>,
                <p
                  className="idea--card-body"
>
                  one
</p>,
              ],
              "className": "idea--card-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "another",
                  "className": "idea--card-title",
                },
                "ref": null,
                "rendered": "another",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "one",
                  "className": "idea--card-body",
                },
                "ref": null,
                "rendered": "one",
                "type": "p",
              },
            ],
            "type": "article",
          },
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "disableLifecycleMethods": true,
    "hydrateIn": undefined,
  },
}
`;
